import{_ as a,d0 as d}from"./index-f7b56f1f.js";async function p({account:n,transaction:t,serializableTransaction:e,gasless:r}){if(e.value&&e.value>0n)throw new Error("Gasless transactions cannot have a value");let o;if(r.provider==="biconomy"){const{relayBiconomyTransaction:i}=await a(()=>import("./biconomy-b0e0a2d9.js"),["assets/biconomy-b0e0a2d9.js","assets/index-f7b56f1f.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="openzeppelin"){const{relayOpenZeppelinTransaction:i}=await a(()=>import("./openzeppelin-16c364a1.js"),["assets/openzeppelin-16c364a1.js","assets/index-f7b56f1f.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="engine"){const{relayEngineTransaction:i}=await a(()=>import("./engine-b78fa853.js"),["assets/engine-b78fa853.js","assets/index-f7b56f1f.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(!o)throw new Error("Unsupported gasless provider");return d({address:n.address,transactionHash:o.transactionHash,chainId:t.chain.id}),o}export{p as sendGaslessTransaction};
