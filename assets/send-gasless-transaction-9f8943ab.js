import{_ as a,d0 as d}from"./index-b2875ca8.js";async function p({account:n,transaction:t,serializableTransaction:e,gasless:r}){if(e.value&&e.value>0n)throw new Error("Gasless transactions cannot have a value");let o;if(r.provider==="biconomy"){const{relayBiconomyTransaction:i}=await a(()=>import("./biconomy-596c4b52.js"),["assets/biconomy-596c4b52.js","assets/index-b2875ca8.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="openzeppelin"){const{relayOpenZeppelinTransaction:i}=await a(()=>import("./openzeppelin-7dcac7d2.js"),["assets/openzeppelin-7dcac7d2.js","assets/index-b2875ca8.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="engine"){const{relayEngineTransaction:i}=await a(()=>import("./engine-94ff7fd3.js"),["assets/engine-94ff7fd3.js","assets/index-b2875ca8.js","assets/index-b41033e1.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(!o)throw new Error("Unsupported gasless provider");return d({address:n.address,transactionHash:o.transactionHash,chainId:t.chain.id}),o}export{p as sendGaslessTransaction};
